<p>This web page validates regular expression patterns against test input. You can even validate a pattern against multiple input lines simoultaneously, if you check off <i>global match</i> and <i>multiline</i>. I find this useful for URI rewrite testing, when you wish to match multiple URI's with a single pattern.<br />
The implementation is based on JavaScript's <a href="http://www.w3schools.com/jsref/jsref_obj_regexp.asp" rel="external" target="_blank">RegExp</a>, but you can also switch to the <a href="http://php.net/manual/en/function.preg-match.php" rel="external" target="_blank">PHP regex engine</a> for expressions which can't be evaluated in JavaScript<sup><a href="#footnote1">1</a></sup>.</p>

<section>
  <form id="regex">
  <div class="column-left">
    <p>
    <label for="pattern"><b>Regex pattern:</b></label><br />
    <textarea autofocus="autofocus" class="text" id="pattern" name="pattern" style="width:440px;height:33px" tabindex="1" required="required"></textarea>
    </p>
  </div>

  <div class="column-right">
    <p>
    <label for="replace"><b>Replace:</b></label><br />
    <textarea class="text" id="replace" name="replace" style="width:440px;height:33px" tabindex="3"></textarea>
    </p>
  </div>

  <div class="column-left">
    <p>
    <label for="input"><b>Test input:</b></label><br />
    <textarea class="text" id="input" name="input" style="width:440px;height:80px" tabindex="2" required="required"></textarea>
    </p>
  </div>

  <div class="column-right">
    <p>
    <label for="matches"><b>Matches:</b></label><br />
    <textarea autofocus="autofocus" class="text" id="matches" name="matches" style="width:440px;height:80px" readonly="readonly" tabindex="10"></textarea>
    </p>
  </div>

  <div style="clear:both">
    <p class="floatleft">
      <b>Engine:</b><br />
      <select id="engine" name="engine" tabindex="6">
        <option value="js">JavaScript</option>
        <option value="php">PHP</option>
      </select>
      &nbsp;&nbsp;&nbsp;
    </p>

    <p class="floatleft">
      <b>Switches:</b><br />
      <label for="nocase">Case-insensitive</label><input id="nocase" name="nocase" type="checkbox" value="i" tabindex="7" />&nbsp;
      <label for="global">Global match</label><input id="global" name="global" type="checkbox" value="g" tabindex="8" />&nbsp;
      <label for="multiline">Multiline</label><input id="multiline" name="multiline" type="checkbox" value="m" tabindex="9" />&nbsp;
    </p>

    <p class="floatright" style="padding-top:1em">
      <input class="button" id="doValidate" type="submit" value="Validate" tabindex="4" />
      &nbsp;&nbsp;&nbsp;
      <input class="button" id="doReplace" type="button" value="Replace" tabindex="5" />
    </p>
  </div>

  </form>
</section>

<section id="samples">
  <table class="datasheet" style="font-size:0.9em;">
    <tr><th colspan="3">Sample patterns</th></tr>
    <tr id="regex-email">
      <td>^\w+([-+.']\w+)*@\w+([-.]\w+)*\.[a-zA-Z]{2,6}$</td>
      <td>E-mail address, e.g. "<span>ole@michelsen.dk</span>"</td>
      <td><a href="#regex-email" rel="nofollow">Test</a></td>
    </tr>
    <tr id="regex-ipv4">
      <td>^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$</td>
      <td>IPv4 address, e.g. "<span>123.123.123.123</span>"</td>
      <td><a href="#regex-ipv4" rel="nofollow">Test</a></td>
    </tr>
    <tr id="regex-host">
      <td>^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$</td>
      <td>Host name, e.g. "<span>ole.michelsen.dk</span>"</td>
      <td><a href="#regex-host" rel="nofollow">Test</a></td>
    </tr>
    <tr id="regex-path">
      <!-- Source: http://techtavern.wordpress.com/2009/04/06/regex-that-matches-path-filename-and-extension/ -->
      <td>^(.*/)?(?:$|(.+?)(?:(\.[^.]*$)|$))</td>
      <td>Path, e.g. "<span>/path/to/file.ext</span>"</td>
      <td><a href="#regex-path" rel="nofollow">Test</a></td>
    </tr>
  </table>
</section>

<br />

<section class="columns" style="font-size:0.9em;">
  <div class="col">
    <table class="datasheet">
      <tr><th colspan="2">Special Characters</th></tr>
      <tr><td>\</td><td>Escape Character</td></tr>
      <tr><td>\n</td><td>New line</td></tr>
      <tr><td>\r</td><td>Carriage return</td></tr>
      <tr><td>\t</td><td>Tab</td></tr>
      <tr><td>\v</td><td>Vertical tab</td></tr>
      <tr><td>\f</td><td>Form feed</td></tr>
    </table>
    <br />
    <table class="datasheet">
      <tr><th colspan="5">Meta Characters (must be escaped)</th></tr>
      <tr><td>^</td><td>[</td><td>.</td><td>$</td><td>{</td></tr>
      <tr><td>*</td><td>(</td><td>)</td><td>+</td><td>\</td></tr>
      <tr><td>|</td><td>?</td><td>&lt;</td><td>&gt;</td><td></td></tr>
    </table>
    <br />
    <table class="datasheet">
      <tr><th colspan="2">Character Classes</th></tr>
      <tr><td>\w</td><td>Word (a-z, A-Z, 0-9, including _ (underscore))</td></tr>
      <tr><td>\W</td><td>Non-word</td></tr>
      <tr><td>\d</td><td>Digit (0-9)</td></tr>
      <tr><td>\D</td><td>Non-digit</td></tr>
      <tr><td>\s</td><td>Whitespace</td></tr>
      <tr><td>\S</td><td>Not whitespace</td></tr>
      <tr><td>\b</td><td>Match at beginning or end</td></tr>
      <tr><td>\B</td><td>Do not match at beginning or end</td></tr>
      <tr><td>\0</td><td>NUL character</td></tr>
      <tr><td>\n</td><td>New line</td></tr>
    </table>
  </div>
  <div class="col">
    <table class="datasheet">
      <tr><th colspan="2">Quantifiers</th></tr>
      <tr><td><i>n</i>*</td><td>0 or more <i>n</i></td></tr>
      <tr><td><i>n</i>*?</td><td>0 or more <i>n</i>, ungreedy</td></tr>
      <tr><td><i>n</i>+</td><td>1 or more <i>n</i></td></tr>
      <tr><td><i>n</i>+?</td><td>1 or more <i>n</i>, ungreedy</td></tr>
      <tr><td><i>n</i>?</td><td>0 or 1 <i>n</i></td></tr>
      <tr><td><i>n</i>??</td><td>0 or 1 <i>n</i>, ungreedy</td></tr>
      <tr><td><i>n</i>{2}</td><td>Exactly 2 <i>n</i></td></tr>
      <tr><td><i>n</i>{2,}</td><td>2 or more <i>n</i></td></tr>
      <tr><td><i>n</i>{2,4}</td><td>2, 3 or 4 <i>n</i></td></tr>
      <tr><td><i>n</i>{2,4}?</td><td>2, 3 or 4 <i>n</i>, ungreedy</td></tr>
    </table>
    <br />
    <table class="datasheet">
      <tr><th colspan="2">Anchors</th></tr>
      <tr><td>^</td><td>Start of line</td></tr>
      <tr><td>$</td><td>End of line</td></tr>
    </table>
    <br />
    <table class="datasheet">
      <tr><th colspan="2">Assertions</th></tr>
      <tr><td><i>n</i>(?=<i>o</i>)</td><td>Lookahead, <i>n</i> followed by <i>o</i> <br />(not matching <i>o</i>)</td></tr>
      <tr><td><i>n</i>(?!<i>o</i>)</td><td>Negative lookahead, <i>n</i> not followed by <i>o</i> <br />(not matching <i>o</i>)</td></tr>
      <tr><td>(?&lt;=<i>o</i>)<i>n</i></td><td>Lookbehind<sup><a href="#footnote1">1</a></sup>, <i>o</i> preceding <i>n</i></td></tr>
      <tr><td>(?&lt;!<i>o</i>)<i>n</i></td><td>Negative lookbehind<sup><a href="#footnote1">1</a></sup>, <i>o</i> not preceding <i>n</i></td></tr>
    </table>
  </div>
  <div class="col">
    <table class="datasheet">
      <tr><th colspan="2">Ranges</th></tr>
      <tr><td>.</td><td>Any character except new line (\n)</td></tr>
      <tr><td>(a|b)</td><td>a or b</td></tr>
      <tr><td>(...)</td><td>Group</td></tr>
      <tr><td>(?:...)</td><td>Passive Group</td></tr>
      <tr><td>[abc]</td><td>Range (a, b or c)</td></tr>
      <tr><td>[^abc]</td><td>Not a, b or c</td></tr>
      <tr><td>[a-z]</td><td>Character between a and z, lower case</td></tr>
      <tr><td>[A-Z]</td><td>Character between A and Z, upper case</td></tr>
      <tr><td>[0-9]</td><td>Number between 0 and 9</td></tr>
      <tr><td>[a-zA-Z0-9]</td><td>Characters between a and z (both cases), and numbers between 0 and 9</td></tr>
      <tr><td>\<i>n</i></td><td>nth group/subpattern</td></tr>
    </table>
  </div>
</section>

<section id="footnotes">
  <ol>
    <li id="footnote1"><span>The <a href="http://www.w3schools.com/jsref/jsref_obj_regexp.asp" rel="external" target="_blank">JavaScript RegExp object</a> does not support lookbehind assertions. Instead I've created a fall-back to the PHP regex engine, which will automatically be used instead, if a lookbehind is detected.</span></li>
  </ol>
</section>

<script src="<%- libs.jquery %>"></script>
<script src="/scripts/regex.js"></script>
